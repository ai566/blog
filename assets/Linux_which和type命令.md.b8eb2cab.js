import{_ as s,o as a,c as n,Q as l}from"./chunks/framework.3afb20c3.js";const F=JSON.parse('{"title":"which和type命令","description":"","frontmatter":{},"headers":[],"relativePath":"Linux/which和type命令.md","filePath":"Linux/which和type命令.md"}'),p={name:"Linux/which和type命令.md"},e=l(`<h1 id="which和type命令" tabindex="-1">which和type命令 <a class="header-anchor" href="#which和type命令" aria-label="Permalink to &quot;which和type命令&quot;">​</a></h1><h2 id="which命令" tabindex="-1">which命令 <a class="header-anchor" href="#which命令" aria-label="Permalink to &quot;which命令&quot;">​</a></h2><p>which命令用于查找命令的路径，例如：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">which</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">ls</span></span>
<span class="line"><span style="color:#B392F0;">/usr/bin/ls</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">which</span><span style="color:#24292E;"> </span><span style="color:#032F62;">ls</span></span>
<span class="line"><span style="color:#6F42C1;">/usr/bin/ls</span></span></code></pre></div><h2 id="type命令" tabindex="-1">type命令 <a class="header-anchor" href="#type命令" aria-label="Permalink to &quot;type命令&quot;">​</a></h2><p>type命令用于检查命令是否是shell自带命令，也就是说安装了这个shell就可以执行这个命令。与之相对的，外部命令是指系统安装的，与Shell无关的命令，一般情况下，一般用户执行的命令存放于/usr/bin/里面的，管理员命令存放于/usr/sbin里面。</p><p>如果输出一个路径则表示是系统命令，如下示例检测是Shell自带还是系统命令：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">type</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">cd</span></span>
<span class="line"><span style="color:#79B8FF;">cd</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">is</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">shell</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">builtin</span><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;"># cd是shell自带</span></span>
<span class="line"></span>
<span class="line"><span style="color:#79B8FF;">type</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">awk</span></span>
<span class="line"><span style="color:#B392F0;">awk</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">is</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/usr/bin/awk</span><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;"># 系统命令</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">type</span><span style="color:#24292E;"> </span><span style="color:#032F62;">cd</span></span>
<span class="line"><span style="color:#005CC5;">cd</span><span style="color:#24292E;"> </span><span style="color:#032F62;">is</span><span style="color:#24292E;"> </span><span style="color:#032F62;">shell</span><span style="color:#24292E;"> </span><span style="color:#032F62;">builtin</span><span style="color:#24292E;">  </span><span style="color:#6A737D;"># cd是shell自带</span></span>
<span class="line"></span>
<span class="line"><span style="color:#005CC5;">type</span><span style="color:#24292E;"> </span><span style="color:#032F62;">awk</span></span>
<span class="line"><span style="color:#6F42C1;">awk</span><span style="color:#24292E;"> </span><span style="color:#032F62;">is</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/usr/bin/awk</span><span style="color:#24292E;">  </span><span style="color:#6A737D;"># 系统命令</span></span></code></pre></div>`,8),o=[e];function t(c,r,i,h,y,d){return a(),n("div",null,o)}const u=s(p,[["render",t]]);export{F as __pageData,u as default};
