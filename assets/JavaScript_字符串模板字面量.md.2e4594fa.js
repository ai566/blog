import{_ as s,o as a,c as n,Q as l}from"./chunks/framework.3afb20c3.js";const g=JSON.parse('{"title":"字符串模板字面量","description":"","frontmatter":{},"headers":[],"relativePath":"JavaScript/字符串模板字面量.md","filePath":"JavaScript/字符串模板字面量.md"}'),o={name:"JavaScript/字符串模板字面量.md"},p=l(`<h1 id="字符串模板字面量" tabindex="-1">字符串模板字面量 <a class="header-anchor" href="#字符串模板字面量" aria-label="Permalink to &quot;字符串模板字面量&quot;">​</a></h1><p>模板字面量取代了早期和其它语言的<code>%d</code>、<code>%f</code>等写法，使得变量化的字符串更容易书写，也更易阅读。模板字符串使用反单引号包容，它有最主要的两个特点：保留了换行符等不可见字符（以往只能用<code>\\n</code>）；提供了变量解析和运算。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> str </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">\`第一行 (这里按回车) </span></span>
<span class="line"><span style="color:#9ECBFF;">第二行\`</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(str)   </span><span style="color:#6A737D;">// =&gt;&#39;第一行\\n第二行&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> a</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">1</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> b</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">2</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">\`a的值是\${</span><span style="color:#E1E4E8;">a</span><span style="color:#9ECBFF;">}\`</span><span style="color:#E1E4E8;">)  </span><span style="color:#6A737D;">// =&gt;&#39;a的值是1&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">\`a+b的结果是\${</span><span style="color:#E1E4E8;">a</span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;">b</span><span style="color:#9ECBFF;">}\`</span><span style="color:#E1E4E8;">)    </span><span style="color:#6A737D;">// =&gt; &#39;a+b的结果是3&#39;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> str </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">\`第一行 (这里按回车) </span></span>
<span class="line"><span style="color:#032F62;">第二行\`</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(str)   </span><span style="color:#6A737D;">// =&gt;&#39;第一行\\n第二行&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> a</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">1</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> b</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">2</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">\`a的值是\${</span><span style="color:#24292E;">a</span><span style="color:#032F62;">}\`</span><span style="color:#24292E;">)  </span><span style="color:#6A737D;">// =&gt;&#39;a的值是1&#39;</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">\`a+b的结果是\${</span><span style="color:#24292E;">a</span><span style="color:#D73A49;">+</span><span style="color:#24292E;">b</span><span style="color:#032F62;">}\`</span><span style="color:#24292E;">)    </span><span style="color:#6A737D;">// =&gt; &#39;a+b的结果是3&#39;</span></span></code></pre></div><p>虽然string类型是原始值，但是表现出像对象一样使用属性和方法。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> str</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&#39;hello&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(str.</span><span style="color:#79B8FF;">length</span><span style="color:#E1E4E8;">)  </span><span style="color:#6A737D;">// =&gt;5， 字符串的长度</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">([</span><span style="color:#F97583;">...</span><span style="color:#E1E4E8;">str])  </span><span style="color:#6A737D;">//=&gt;[ &#39;h&#39;, &#39;e&#39;, &#39;l&#39;, &#39;l&#39;, &#39;o&#39; ] ，将字符串快速打平为数组</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> str</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;hello&#39;</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(str.</span><span style="color:#005CC5;">length</span><span style="color:#24292E;">)  </span><span style="color:#6A737D;">// =&gt;5， 字符串的长度</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">([</span><span style="color:#D73A49;">...</span><span style="color:#24292E;">str])  </span><span style="color:#6A737D;">//=&gt;[ &#39;h&#39;, &#39;e&#39;, &#39;l&#39;, &#39;l&#39;, &#39;o&#39; ] ，将字符串快速打平为数组</span></span></code></pre></div>`,5),e=[p];function t(c,r,y,E,i,d){return a(),n("div",null,e)}const _=s(o,[["render",t]]);export{g as __pageData,_ as default};
