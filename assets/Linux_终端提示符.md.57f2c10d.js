import{_ as s,o as a,c as e,Q as n}from"./chunks/framework.3afb20c3.js";const E=JSON.parse('{"title":"终端提示符","description":"","frontmatter":{},"headers":[],"relativePath":"Linux/终端提示符.md","filePath":"Linux/终端提示符.md"}'),p={name:"Linux/终端提示符.md"},l=n(`<h1 id="终端提示符" tabindex="-1">终端提示符 <a class="header-anchor" href="#终端提示符" aria-label="Permalink to &quot;终端提示符&quot;">​</a></h1><p>打开终端后，每次在输入命令前会看到有一段文本，这段文本叫终端提示符：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">[  js01@DESKTOP-EHOTHPI~  ]$</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">[  js01@DESKTOP-EHOTHPI~  ]$</span></span></code></pre></div><p>这里的js01表示用户名称， DESKTOP-EHOTHPI表示主机名，~表示当前工作目录是用户的家目录。</p><p>中括号后面会接一个美元符号$或井号#。美元符号$表示一般用户，井号地代表管理员。</p><p>Linux有两种用户，一般用户和管理员用户，大部分文件系统管理相关的命令只需要一般用户即可。</p><p>我们后面的代码示例会省略中括号的内，只显示提示符$，表示后面的内容是你需要输入到终端的。注意，只需要输入$后面的文本，而不能重复输入$。一般紧接着会我们会写出终端返回的结果。例如：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">$which ls    </span><span style="color:#6A737D;"># which ls是需要输入的命令</span></span>
<span class="line"><span style="color:#B392F0;">/usr/bin/ls</span><span style="color:#E1E4E8;">   </span><span style="color:#6A737D;"># 终端显示的结果</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">$which ls    </span><span style="color:#6A737D;"># which ls是需要输入的命令</span></span>
<span class="line"><span style="color:#6F42C1;">/usr/bin/ls</span><span style="color:#24292E;">   </span><span style="color:#6A737D;"># 终端显示的结果</span></span></code></pre></div><p>和大多数编程语言不一样，Linux在命令行和脚本中使用井号#表示将该行后面的内容注释掉。例如上文示例。</p>`,9),o=[l];function t(c,i,r,d,h,_){return a(),e("div",null,o)}const y=s(p,[["render",t]]);export{E as __pageData,y as default};
