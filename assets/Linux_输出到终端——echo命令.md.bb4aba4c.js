import{_ as s,o as a,c as e,Q as l}from"./chunks/framework.3afb20c3.js";const g=JSON.parse('{"title":"输出到终端——echo命令","description":"","frontmatter":{},"headers":[],"relativePath":"Linux/输出到终端——echo命令.md","filePath":"Linux/输出到终端——echo命令.md"}'),o={name:"Linux/输出到终端——echo命令.md"},n=l(`<h1 id="输出到终端——echo命令" tabindex="-1">输出到终端——echo命令 <a class="header-anchor" href="#输出到终端——echo命令" aria-label="Permalink to &quot;输出到终端——echo命令&quot;">​</a></h1><p>echo是非常常见的命令，它的作用是输出内容到终端，例如：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">echo</span><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">hello</span><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">bash</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#B392F0;">hello</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">bash</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">echo</span><span style="color:#24292E;">  </span><span style="color:#032F62;">hello</span><span style="color:#24292E;">  </span><span style="color:#032F62;">bash</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#6F42C1;">hello</span><span style="color:#24292E;"> </span><span style="color:#032F62;">bash</span></span></code></pre></div><p>echo会解析所有的命令行参数，而且会忽略空白符：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">$a=</span><span style="color:#9ECBFF;">&quot;bash&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">$echo   hello        $data</span></span>
<span class="line"><span style="color:#B392F0;">hello</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">bash</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">$a=</span><span style="color:#032F62;">&quot;bash&quot;</span></span>
<span class="line"><span style="color:#24292E;">$echo   hello        $data</span></span>
<span class="line"><span style="color:#6F42C1;">hello</span><span style="color:#24292E;"> </span><span style="color:#032F62;">bash</span></span></code></pre></div><p>要想保留空白字符，需要将其放入单引号或双引号中：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">echo</span><span style="color:#E1E4E8;">   </span><span style="color:#9ECBFF;">&#39;   hello     bash   &#39;</span><span style="color:#E1E4E8;">  </span></span>
<span class="line"><span style="color:#79B8FF;">echo</span><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&quot;   hello     bash   &quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">echo</span><span style="color:#24292E;">   </span><span style="color:#032F62;">&#39;   hello     bash   &#39;</span><span style="color:#24292E;">  </span></span>
<span class="line"><span style="color:#005CC5;">echo</span><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;   hello     bash   &quot;</span></span></code></pre></div><p>单引号和双引号的区别是对变量的解析与否，双引号会读取以$开头的单词并尝试解析变量值，再插入到字符串中，这种方式叫做“内插”。而单引号则不理会进行变量解析。</p><p>如果不需要解析变量，则使用单引号即可：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">echo  &#39;hello $bash&#39;</span></span>
<span class="line"><span style="color:#e1e4e8;">hello $bash</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">echo  &#39;hello $bash&#39;</span></span>
<span class="line"><span style="color:#24292e;">hello $bash</span></span></code></pre></div><h2 id="写内容到文件的快速方式" tabindex="-1">写内容到文件的快速方式 <a class="header-anchor" href="#写内容到文件的快速方式" aria-label="Permalink to &quot;写内容到文件的快速方式&quot;">​</a></h2><p>echo命令经常用来快速将少量文本内容写入到文本文件，使用重定向符号<code>&gt;</code>或<code>&gt;&gt;</code>将内容保存到文件而不输出到终端。这两个符号分别可以覆盖内容和追加内容到文件。例如：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">echo hello bash  &gt;    1.md</span></span>
<span class="line"><span style="color:#e1e4e8;">echo hello bash  &gt;&gt;  1.md</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">echo hello bash  &gt;    1.md</span></span>
<span class="line"><span style="color:#24292e;">echo hello bash  &gt;&gt;  1.md</span></span></code></pre></div>`,13),p=[n];function c(t,h,r,i,d,y){return a(),e("div",null,p)}const u=s(o,[["render",c]]);export{g as __pageData,u as default};
