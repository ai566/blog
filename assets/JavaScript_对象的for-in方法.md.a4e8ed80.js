import{_ as s,o as a,c as n,Q as o}from"./chunks/framework.9bc09dc8.js";const f=JSON.parse('{"title":"对象的for in 方法","description":"","frontmatter":{},"headers":[],"relativePath":"JavaScript/对象的for-in方法.md","filePath":"JavaScript/对象的for-in方法.md"}'),p={name:"JavaScript/对象的for-in方法.md"},l=o(`<h1 id="对象的for-in-方法" tabindex="-1">对象的for in 方法 <a class="header-anchor" href="#对象的for-in-方法" aria-label="Permalink to &quot;对象的for in 方法&quot;">​</a></h1><p>可迭代对象可以使用for of 循环遍历，而Object类型并非可迭代对象，不过可以使用for in 方法遍历其属性名和属性值，例如：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">obj</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {a:</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, b:</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">, c:</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> key </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> obj){</span></span>
<span class="line"><span style="color:#E1E4E8;">	console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(key)  </span><span style="color:#6A737D;">// a  b  c</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">obj</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {a:</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, b:</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, c:</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> key </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> obj){</span></span>
<span class="line"><span style="color:#24292E;">	console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(key)  </span><span style="color:#6A737D;">// a  b  c</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>从这里可以看出，如果只有一个参数，那么只遍历属性名称。</p>`,4),e=[l];function t(c,r,i,y,E,_){return a(),n("div",null,e)}const h=s(p,[["render",t]]);export{f as __pageData,h as default};
