import{_ as l,o as e,c as h,Q as a}from"./chunks/framework.3afb20c3.js";const u=JSON.parse('{"title":"Shell简介","description":"","frontmatter":{},"headers":[],"relativePath":"Linux/Shell简介.md","filePath":"Linux/Shell简介.md"}'),s={name:"Linux/Shell简介.md"},t=a('<h1 id="shell简介" tabindex="-1">Shell简介 <a class="header-anchor" href="#shell简介" aria-label="Permalink to &quot;Shell简介&quot;">​</a></h1><h2 id="什么是shell" tabindex="-1">什么是Shell <a class="header-anchor" href="#什么是shell" aria-label="Permalink to &quot;什么是Shell&quot;">​</a></h2><p>在没有图形界面的时代，Shell是用户与操作系统交互的唯一方式。</p><p>用户输入命令，shell将命令传递给操作系统，操作系统执行后返回给shell，显示在终端上，这就是shell执行的一般流程。</p><h2 id="终端和shell的区别" tabindex="-1">终端和Shell的区别 <a class="header-anchor" href="#终端和shell的区别" aria-label="Permalink to &quot;终端和Shell的区别&quot;">​</a></h2><p>终端只是一个图形界面，shell才是“真正的灵魂”。</p><p>所以，bash是shell，而不是终端，当你安装了bash之后，你可以在任意终端使用bash。</p><p>比如Windows terminal 是Win11自带的终端软件，它里面可以调用的shell包括：powershell、bash（如果已安装）、cmd等。</p><p>Windows10上安装的powershell既可以认为是终端，也可以认为是shell，只是因为它们取了相同的名字。不过我们可以在vscode的集成终端环境中使用powershell，此时PowerShell就是shell。</p><h2 id="shell分类" tabindex="-1">shell分类 <a class="header-anchor" href="#shell分类" aria-label="Permalink to &quot;shell分类&quot;">​</a></h2><p>最流行的shell是bourne shell，简称bash，它预装在许多流行的Linux发行版上。当然，还有更现代的zsh、颇受用户喜爱的fish等Shell。</p><p>这里更推荐学习Bash，因为一通百通，学会了bash，其它的shell就很容易了。后面的教程都默认使用Bash。</p>',12),o=[t];function r(n,i,p,c,d,_){return e(),h("div",null,o)}const b=l(s,[["render",r]]);export{u as __pageData,b as default};
