import{_ as s,o as e,c as t,Q as a}from"./chunks/framework.3afb20c3.js";const g=JSON.parse('{"title":"配置SSH登录","description":"","frontmatter":{},"headers":[],"relativePath":"Git/配置SSH登录.md","filePath":"Git/配置SSH登录.md"}'),p={name:"Git/配置SSH登录.md"},o=a('<h1 id="配置ssh登录" tabindex="-1">配置SSH登录 <a class="header-anchor" href="#配置ssh登录" aria-label="Permalink to &quot;配置SSH登录&quot;">​</a></h1><p>我们使用Git命令不可避免的要跟Github打交道。要将本地文件上传到Github的仓库，就需要身份鉴权，基于安全的考量，已经不推荐用户名密码的方式，而推荐SSH非对称秘钥的方式。</p><p>首先进入Bash环境，运行如下命令：</p><div class="language-ssh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ssh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">ssh-keygen -t rsa -C &quot;提示信息&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">ssh-keygen -t rsa -C &quot;提示信息&quot;</span></span></code></pre></div><p>这里的提示信息可以随意写，一般为自己的邮箱。</p><p>运行上述命令后，终端会问你几个问题以进一步完成秘钥文件的生成，其它的可以直接回车以同意默认设置，最重要的是秘钥文件名，默认是<code>C:\\Users\\用户名/.ssh/id_rsa</code>，秘钥文件一般放在家目录，名称可以随便取。如果已经存在同名的秘钥文件记得要修改以免覆盖其它秘钥文件。我们这里使用默认设置。</p><p>然后就会在家目录生成两个文件：</p><ul><li>id_rsa</li><li>id_rsa.pub</li></ul><p>带有pub的是公钥文件，可以分发在网络上。另一个是私钥文件，一定不能泄露。</p><p>使用VSCode或记事本打开id_rsa.pub文件，内容只有一行，全选复制。</p><p>打开浏览器，输入<code>https://github.com/settings/keys</code> ，点击右边的<strong>New SSH Key</strong>，在Title文本框输入一些信息，在Key文本框粘贴我们刚刚复制好的公钥文本，点击<strong>Add SSH Key</strong>，至此ssh秘钥配置完成。</p><p>回到本地bash环境，运行如下命令，如果输出内部包含Successfully表示配置成功。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">ssh -T git@github.com</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">ssh -T git@github.com</span></span></code></pre></div><p>当然，第一次配置可能不会成功，遇到问题首先多尝试几次，然后将输出内容粘贴到搜索引擎以寻求其它实践者的经验。</p><p>另外，由于Github本身的不稳定性，有些时候可能需要一点科学方法才能连上。</p>',15),i=[o];function c(n,l,d,r,h,_){return e(),t("div",null,i)}const S=s(p,[["render",c]]);export{g as __pageData,S as default};
