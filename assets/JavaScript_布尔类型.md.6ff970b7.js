import{_ as s,o as a,c as n,Q as l}from"./chunks/framework.9bc09dc8.js";const B=JSON.parse('{"title":"布尔类型","description":"","frontmatter":{},"headers":[],"relativePath":"JavaScript/布尔类型.md","filePath":"JavaScript/布尔类型.md"}'),o={name:"JavaScript/布尔类型.md"},p=l(`<h1 id="布尔类型" tabindex="-1">布尔类型 <a class="header-anchor" href="#布尔类型" aria-label="Permalink to &quot;布尔类型&quot;">​</a></h1><p>布尔（英语：Boolean）是计算机科学中的逻辑数据类型，以发明布尔代数的数学家乔治·布尔为名。它是只有两种值的原始类型 : true和false。</p><p>下面这些值可以被显示或隐式地转换为true：</p><ul><li>非空字符串，注意，<code>&quot; &quot;</code>中间有一个空格，也算非空。</li><li>任意对象，包括空对象</li><li>正负无穷大（ Infinity、- Infinity）</li><li>非零数值</li></ul><p>下面这些值可以被显示或隐式地转换为false：</p><ul><li>空字符串<code>&quot;&quot;</code></li><li>NaN</li><li>数字0</li><li>null</li><li>undefined</li></ul><p>可以使用<code>!!()</code>和<code>Boolean()</code>将其它形式的值显示地转换为布尔类型，以便于条件判断，前者是后者的简写形式。</p><p>来看下面的示例：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// 下面这些值都视作true</span></span>
<span class="line"><span style="color:#B392F0;">Boolean</span><span style="color:#E1E4E8;">(hello</span><span style="color:#9ECBFF;">&#39;)  // =&gt; tru</span><span style="color:#FDAEB7;font-style:italic;">e</span></span>
<span class="line"><span style="color:#B392F0;">Boolean</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;  &#39;</span><span style="color:#E1E4E8;">)  </span><span style="color:#6A737D;">// 非空字符串，空格也算非空</span></span>
<span class="line"><span style="color:#B392F0;">Boolean</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">5</span><span style="color:#F97583;">/</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">)  </span><span style="color:#6A737D;">// 正负无穷大</span></span>
<span class="line"><span style="color:#B392F0;">Boolean</span><span style="color:#E1E4E8;">({})   </span><span style="color:#6A737D;">// 任意对象，包括空对象</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 下面这些值都视作false</span></span>
<span class="line"><span style="color:#B392F0;">Boolean</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;&#39;</span><span style="color:#E1E4E8;">)   </span><span style="color:#6A737D;">// =&gt;false 空字符串</span></span>
<span class="line"><span style="color:#B392F0;">Boolean</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">)   </span></span>
<span class="line"><span style="color:#B392F0;">Boolean</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">NaN</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#B392F0;">Boolean</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#B392F0;">Boolean</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">undefined</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 下面这些值都视作true</span></span>
<span class="line"><span style="color:#6F42C1;">Boolean</span><span style="color:#24292E;">(hello</span><span style="color:#032F62;">&#39;)  // =&gt; tru</span><span style="color:#B31D28;font-style:italic;">e</span></span>
<span class="line"><span style="color:#6F42C1;">Boolean</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;  &#39;</span><span style="color:#24292E;">)  </span><span style="color:#6A737D;">// 非空字符串，空格也算非空</span></span>
<span class="line"><span style="color:#6F42C1;">Boolean</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">5</span><span style="color:#D73A49;">/</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">)  </span><span style="color:#6A737D;">// 正负无穷大</span></span>
<span class="line"><span style="color:#6F42C1;">Boolean</span><span style="color:#24292E;">({})   </span><span style="color:#6A737D;">// 任意对象，包括空对象</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 下面这些值都视作false</span></span>
<span class="line"><span style="color:#6F42C1;">Boolean</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;&#39;</span><span style="color:#24292E;">)   </span><span style="color:#6A737D;">// =&gt;false 空字符串</span></span>
<span class="line"><span style="color:#6F42C1;">Boolean</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">)   </span></span>
<span class="line"><span style="color:#6F42C1;">Boolean</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">NaN</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#6F42C1;">Boolean</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">null</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#6F42C1;">Boolean</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">undefined</span><span style="color:#24292E;">)</span></span></code></pre></div><p>在<code>if</code>语句中，不必显式地使用<code>!!()</code>，会自动隐式调用:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">a</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">2</span></span>
<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (a){console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">)}   </span><span style="color:#6A737D;">//=&gt; true</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> b</span></span>
<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (b){console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">)}</span></span>
<span class="line"><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> {console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">)}   </span><span style="color:#6A737D;">//=&gt; false</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">a</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">2</span></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (a){console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">true</span><span style="color:#24292E;">)}   </span><span style="color:#6A737D;">//=&gt; true</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> b</span></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (b){console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">true</span><span style="color:#24292E;">)}</span></span>
<span class="line"><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">false</span><span style="color:#24292E;">)}   </span><span style="color:#6A737D;">//=&gt; false</span></span></code></pre></div>`,11),e=[p];function c(t,r,y,E,i,F){return a(),n("div",null,e)}const u=s(o,[["render",c]]);export{B as __pageData,u as default};
